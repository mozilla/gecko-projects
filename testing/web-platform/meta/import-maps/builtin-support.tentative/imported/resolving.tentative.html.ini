[resolving.tentative.html]
  [Mapped using the "imports" key only (no scopes) / Package-like scenarios / should fail for package submodules that map to nowhere]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Tricky specifiers / should work for explicitly-mapped specifiers that happen to have a slash]
    expected: FAIL

  [Unmapped / should parse absolute fetch-scheme URLs]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / should fail when the mapping is to an empty array]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / URL-like specifiers / should remap to other URLs]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Package-like scenarios / should work for package submodules]
    expected: FAIL

  [Unmapped / should resolve ./ specifiers as URLs]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Overlapping entries with trailing slashes / should favor the most-specific key when empty arrays are involved for less-specific keys]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / URL-like specifiers / should remap URLs that are just composed from / and .]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / URL-like specifiers / should fail for URLs that remap to empty arrays]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / URL-like specifiers / should remap URLs that are prefix-matched by keys with trailing slashes]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Tricky specifiers / should fail for attempting to get a submodule of something not declared with a trailing slash]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / URL-like specifiers / should use the last entry's address when URL-like specifiers parse to the same absolute URL]
    expected: FAIL

  [Unmapped / should fail for strings not parseable as absolute URLs and not starting with ./ ../ or /]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Package-like scenarios / should work for package main modules]
    expected: FAIL

  [Unmapped / should resolve ../ specifiers as URLs]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Overlapping entries with trailing slashes / should favor the most-specific key (no empty arrays)]
    expected: FAIL

  [Unmapped / should resolve / specifiers as URLs]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Tricky specifiers / should work when the specifier has punctuation]
    expected: FAIL

  [Unmapped / should fail for absolute non-fetch-scheme URLs]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Package-like scenarios / should still fail for package modules that are not declared]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Overlapping entries with trailing slashes / should favor the most-specific key when empty arrays are involved for more-specific keys]
    expected: FAIL

  [Mapped using the "imports" key only (no scopes) / Package-like scenarios / should work for package names that end in a slash by just passing through]
    expected: FAIL

