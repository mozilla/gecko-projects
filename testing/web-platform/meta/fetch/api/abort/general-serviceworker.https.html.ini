[general-serviceworker.https.html]
  type: testharness
  [ServiceWorkerGlobalScope: Aborting rejects with AbortError]
    expected: FAIL

  [ServiceWorkerGlobalScope: Aborting rejects with AbortError - no-cors]
    expected: FAIL

  [ServiceWorkerGlobalScope: Request objects have a signal property]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal on request object]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal on request object created from request object]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal on request object created from request object, with signal on second request]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal on request object created from request object, with signal on second request overriding another]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal retained after unrelated properties are overridden by fetch]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal removed by setting to null]
    expected: FAIL

  [ServiceWorkerGlobalScope: Already aborted signal rejects immediately]
    expected: FAIL

  [ServiceWorkerGlobalScope: Request is still 'used' if signal is aborted before fetching]
    expected: FAIL

  [ServiceWorkerGlobalScope: response.arrayBuffer() rejects if already aborted]
    expected: FAIL

  [ServiceWorkerGlobalScope: response.blob() rejects if already aborted]
    expected: FAIL

  [ServiceWorkerGlobalScope: response.formData() rejects if already aborted]
    expected: FAIL

  [ServiceWorkerGlobalScope: response.json() rejects if already aborted]
    expected: FAIL

  [ServiceWorkerGlobalScope: response.text() rejects if already aborted]
    expected: FAIL

  [ServiceWorkerGlobalScope: Already aborted signal does not make request]
    expected: FAIL

  [ServiceWorkerGlobalScope: Already aborted signal can be used for many fetches]
    expected: FAIL

  [ServiceWorkerGlobalScope: Signal can be used to abort other fetches, even if another fetch succeeded before aborting]
    expected: FAIL

  [ServiceWorkerGlobalScope: Underlying connection is closed when aborting after receiving response]
    expected: FAIL

  [ServiceWorkerGlobalScope: Underlying connection is closed when aborting after receiving response - no-cors]
    expected: FAIL

  [ServiceWorkerGlobalScope: Fetch aborted & connection closed when aborted after calling response.arrayBuffer()]
    expected: FAIL

  [ServiceWorkerGlobalScope: Fetch aborted & connection closed when aborted after calling response.blob()]
    expected: FAIL

  [ServiceWorkerGlobalScope: Fetch aborted & connection closed when aborted after calling response.formData()]
    expected: FAIL

  [ServiceWorkerGlobalScope: Fetch aborted & connection closed when aborted after calling response.json()]
    expected: FAIL

  [ServiceWorkerGlobalScope: Fetch aborted & connection closed when aborted after calling response.text()]
    expected: FAIL

  [ServiceWorkerGlobalScope: Stream errors once aborted. Underlying connection closed.]
    expected: FAIL

  [ServiceWorkerGlobalScope: Stream errors once aborted, after reading. Underlying connection closed.]
    expected: FAIL

  [ServiceWorkerGlobalScope: Stream will not error if body is empty. It's closed with an empty queue before it errors.]
    expected: FAIL

  [ServiceWorkerGlobalScope: Readable stream synchronously cancels with AbortError if aborted before reading]
    expected: FAIL

