[serviceworker_cookieStore_arguments.tentative.https.html]
  [cookieStore.delete with positional name]
    expected: FAIL

  [cookieStore.delete with name in options]
    expected: FAIL

  [cookieStore.delete with name in both positional arguments and options]
    expected: FAIL

  [cookieStore.delete with value in options]
    expected: FAIL

  [cookieStore.delete with expires in options]
    expected: FAIL

  [cookieStore.delete with domain set to the current hostname]
    expected: FAIL

  [cookieStore.delete with domain set to a subdomain of the current hostname]
    expected: FAIL

  [cookieStore.delete with name in options and domain set to the current hostname]
    expected: FAIL

  [cookieStore.delete with name in options and domain set to a subdomain of the current hostname]
    expected: FAIL

  [cookieStore.delete with path set to the current directory]
    expected: FAIL

  [cookieStore.delete with path set to subdirectory of the current directory]
    expected: FAIL

  [cookieStore.get with positional name]
    expected: FAIL

  [cookieStore.get with name in options]
    expected: FAIL

  [cookieStore.get with name in both positional arguments and options]
    expected: FAIL

  [cookieStore.get with matchType explicitly set to equals]
    expected: FAIL

  [cookieStore.get with matchType set to startsWith]
    expected: FAIL

  [cookieStore.get with invalid matchType]
    expected: FAIL

  [cookieStore.get with matchType set to startsWith and name in options]
    expected: FAIL

  [cookieStore.getAll with no arguments]
    expected: FAIL

  [cookieStore.getAll with positional name]
    expected: FAIL

  [cookieStore.getAll with name in options]
    expected: FAIL

  [cookieStore.getAll with name in both positional arguments and options]
    expected: FAIL

  [cookieStore.getAll with matchType explicitly set to equals]
    expected: FAIL

  [cookieStore.getAll with matchType set to startsWith]
    expected: FAIL

  [cookieStore.getAll with invalid matchType]
    expected: FAIL

  [cookieStore.getAll with matchType set to startsWith and name in options]
    expected: FAIL

  [cookieStore.has with positional name]
    expected: FAIL

  [cookieStore.has with name in options]
    expected: FAIL

  [cookieStore.has with name in both positional arguments and options]
    expected: FAIL

  [cookieStore.has with matchType explicitly set to equals]
    expected: FAIL

  [cookieStore.has with matchType set to startsWith]
    expected: FAIL

  [cookieStore.has with invalid matchType]
    expected: FAIL

  [cookieStore.has with matchType set to startsWith and name in options]
    expected: FAIL

  [cookieStore.set with positional name and value]
    expected: FAIL

  [cookieStore.set with name and value in options]
    expected: FAIL

  [cookieStore.set with name in both positional arguments and options]
    expected: FAIL

  [cookieStore.set with value in both positional arguments and options]
    expected: FAIL

  [cookieStore.set with expires in the future]
    expected: FAIL

  [cookieStore.set with expires in the past]
    expected: FAIL

  [cookieStore.set with name and value in options and expires in the future]
    expected: FAIL

  [cookieStore.set with name and value in options and expires in the past]
    expected: FAIL

  [cookieStore.set with domain set to the current hostname]
    expected: FAIL

  [cookieStore.set with domain set to a subdomain of the current hostname]
    expected: FAIL

  [cookieStore.set default domain is current hostname]
    expected: FAIL

  [cookieStore.set with path set to the current directory]
    expected: FAIL

  [cookieStore.set with path set to a subdirectory of the current directory]
    expected: FAIL

  [cookieStore.set default path is /]
    expected: FAIL

  [cookieStore.get with matchType set to starts-with]
    expected: FAIL

  [cookieStore.get with matchType set to starts-with and name in options]
    expected: FAIL

  [cookieStore.getAll with matchType set to starts-with]
    expected: FAIL

  [cookieStore.getAll with matchType set to starts-with and name in options]
    expected: FAIL

  [CookieListItem - cookieStore.set defaults with positional name and value]
    expected: FAIL

  [CookieListItem - cookieStore.set defaults with name and value in options]
    expected: FAIL

  [CookieListItem - cookieStore.set with expires set to a timestamp 10 years in the future]
    expected: FAIL

  [CookieListItem - cookieStore.set with name and value in options and expires set to a future timestamp]
    expected: FAIL

  [CookieListItem - cookieStore.set with expires set to a Date 10 years in the future]
    expected: FAIL

  [CookieListItem - cookieStore.set with name and value in options and expires set to a future Date]
    expected: FAIL

  [CookieListItem - cookieStore.set with domain set to the current hostname]
    expected: FAIL

  [CookieListItem - cookieStore.set with path set to the current directory]
    expected: FAIL

  [CookieListItem - cookieStore.set with secure set to false]
    expected: FAIL

  [CookieListItem - cookieStore.set with sameSite set to strict]
    expected: FAIL

  [CookieListItem - cookieStore.set with positional name and value and sameSite set to strict]
    expected: FAIL

  [CookieListItem - cookieStore.set with sameSite set to lax]
    expected: FAIL

  [CookieListItem - cookieStore.set with positional name and value and sameSite set to lax]
    expected: FAIL

  [CookieListItem - cookieStore.set with sameSite set to unrestricted]
    expected: FAIL

  [CookieListItem - cookieStore.set with positional name and value and sameSite set to unrestricted]
    expected: FAIL

  [cookieStore.delete with domain set to a non-domain-matching suffix of the current hostname]
    expected: FAIL

  [cookieStore.delete with name in options and domain set to a non-domain-matching suffix of the current hostname]
    expected: FAIL

  [cookieStore.delete with get result]
    expected: FAIL

  [cookieStore.get with no arguments]
    expected: FAIL

  [cookieStore.get with matchType set to equals and missing name]
    expected: FAIL

  [cookieStore.get with matchType set to starts-with and missing name]
    expected: FAIL

  [cookieStore.getAll with matchType set to equals and missing name]
    expected: FAIL

  [cookieStore.getAll with matchType set to starts-with and missing name]
    expected: FAIL

  [cookieStore.getAll returns multiple cookies written by cookieStore.set]
    expected: FAIL

  [cookieStore.set with expires set to a future timestamp]
    expected: FAIL

  [cookieStore.set with expires set to a past timestamp]
    expected: FAIL

  [cookieStore.set with expires set to a future Date]
    expected: FAIL

  [cookieStore.set with expires set to a past Date]
    expected: FAIL

  [cookieStore.set with domain set to a non-domain-matching suffix of the current hostname]
    expected: FAIL

  [cookieStore.set default domain is null and differs from current hostname]
    expected: FAIL

  [cookieStore.set with get result]
    expected: FAIL

  [cookieStore.set with __Secure- name on secure origin]
    expected: FAIL

  [cookieStore.set of expired __Secure- cookie name on secure origin]
    expected: FAIL

  [cookieStore.delete with __Secure- name on secure origin]
    expected: FAIL

  [cookieStore.set with __Host- name on secure origin]
    expected: FAIL

  [cookieStore.set of expired __Host- cookie name on secure origin]
    expected: FAIL

  [cookieStore.delete with __Host- name on secure origin]
    expected: FAIL

