[close.sharedworker.html]
  type: testharness
  [fulfillment value of ws.close() call must be undefined even if the underlying sink returns a non-undefined value]
    expected: FAIL

  [when sink calls error asynchronously while closing, the stream should become errored]
    expected: FAIL

  [when sink calls error synchronously while closing, the stream should become errored]
    expected: FAIL

  [releaseLock on a stream with a pending write in which the stream has been errored]
    expected: FAIL

  [releaseLock on a stream with a pending close in which the stream has been errored]
    expected: FAIL

  [when close is called on a WritableStream in writable state, ready should return a fulfilled promise]
    expected: FAIL

  [when close is called on a WritableStream in waiting state, ready promise should be fulfilled]
    expected: FAIL

  [when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time]
    expected: FAIL

  [returning a thenable from close() should work]
    expected: FAIL

  [releaseLock() should not change the result of sync close()]
    expected: FAIL

  [releaseLock() should not change the result of async close()]
    expected: FAIL

  [close() should set state to CLOSED even if writer has detached]
    expected: FAIL

  [the promise returned by async abort during close should resolve]
    expected: FAIL

  [promises must fulfill/reject in the expected order on closure]
    expected: FAIL

  [promises must fulfill/reject in the expected order on aborted closure]
    expected: FAIL

  [promises must fulfill/reject in the expected order on aborted and errored closure]
    expected: FAIL

