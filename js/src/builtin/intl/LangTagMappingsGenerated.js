// Generated by make_intl_data.py. DO NOT EDIT.

// Mappings from grandfathered tags to preferred values.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
var grandfatheredMappings = {
    "art-lojban": "jbo",
    "cel-gaulish": "xtg-x-cel-gaulish",
    "zh-guoyu": "zh",
    "zh-hakka": "hak",
    "zh-xiang": "hsn",
};

// Mappings from language subtags to preferred values.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
var languageMappings = {
    "aam": "aas",
    "aar": "aa",
    "abk": "ab",
    "adp": "dz",
    "afr": "af",
    "aju": "jrb",
    "aka": "ak",
    "alb": "sq",
    "als": "sq",
    "amh": "am",
    "ara": "ar",
    "arb": "ar",
    "arg": "an",
    "arm": "hy",
    "asm": "as",
    "aue": "ktz",
    "ava": "av",
    "ave": "ae",
    "aym": "ay",
    "ayr": "ay",
    "ayx": "nun",
    "aze": "az",
    "azj": "az",
    "bak": "ba",
    "bam": "bm",
    "baq": "eu",
    "bcc": "bal",
    "bcl": "bik",
    "bel": "be",
    "ben": "bn",
    "bgm": "bcg",
    "bh": "bho",
    "bih": "bho",
    "bis": "bi",
    "bjd": "drl",
    "bod": "bo",
    "bos": "bs",
    "bre": "br",
    "bul": "bg",
    "bur": "my",
    "bxk": "luy",
    "bxr": "bua",
    "cat": "ca",
    "ccq": "rki",
    "ces": "cs",
    "cha": "ch",
    "che": "ce",
    "chi": "zh",
    "chu": "cu",
    "chv": "cv",
    "cjr": "mom",
    "cka": "cmr",
    "cld": "syr",
    "cmk": "xch",
    "cmn": "zh",
    "cor": "kw",
    "cos": "co",
    "coy": "pij",
    "cqu": "quh",
    "cre": "cr",
    "cwd": "cr",
    "cym": "cy",
    "cze": "cs",
    "dan": "da",
    "deu": "de",
    "dgo": "doi",
    "dhd": "mwr",
    "dik": "din",
    "diq": "zza",
    "div": "dv",
    "drh": "mn",
    "dut": "nl",
    "dzo": "dz",
    "ekk": "et",
    "ell": "el",
    "emk": "man",
    "eng": "en",
    "epo": "eo",
    "esk": "ik",
    "est": "et",
    "eus": "eu",
    "ewe": "ee",
    "fao": "fo",
    "fas": "fa",
    "fat": "ak",
    "fij": "fj",
    "fin": "fi",
    "fra": "fr",
    "fre": "fr",
    "fry": "fy",
    "fuc": "ff",
    "ful": "ff",
    "gav": "dev",
    "gaz": "om",
    "gbo": "grb",
    "geo": "ka",
    "ger": "de",
    "gfx": "vaj",
    "ggn": "gvr",
    "gla": "gd",
    "gle": "ga",
    "glg": "gl",
    "glv": "gv",
    "gno": "gon",
    "gre": "el",
    "grn": "gn",
    "gti": "nyc",
    "gug": "gn",
    "guj": "gu",
    "guv": "duz",
    "gya": "gba",
    "hat": "ht",
    "hau": "ha",
    "hdn": "hai",
    "hea": "hmn",
    "heb": "he",
    "her": "hz",
    "him": "srx",
    "hin": "hi",
    "hmo": "ho",
    "hrr": "jal",
    "hrv": "hr",
    "hun": "hu",
    "hye": "hy",
    "ibi": "opa",
    "ibo": "ig",
    "ice": "is",
    "ido": "io",
    "iii": "ii",
    "ike": "iu",
    "iku": "iu",
    "ile": "ie",
    "ilw": "gal",
    "in": "id",
    "ina": "ia",
    "ind": "id",
    "ipk": "ik",
    "isl": "is",
    "ita": "it",
    "iw": "he",
    "jav": "jv",
    "jeg": "oyb",
    "ji": "yi",
    "jpn": "ja",
    "jw": "jv",
    "kal": "kl",
    "kan": "kn",
    "kas": "ks",
    "kat": "ka",
    "kau": "kr",
    "kaz": "kk",
    "kgc": "tdf",
    "kgh": "kml",
    "khk": "mn",
    "khm": "km",
    "kik": "ki",
    "kin": "rw",
    "kir": "ky",
    "kmr": "ku",
    "knc": "kr",
    "kng": "kg",
    "knn": "kok",
    "koj": "kwv",
    "kom": "kv",
    "kon": "kg",
    "kor": "ko",
    "kpv": "kv",
    "krm": "bmf",
    "ktr": "dtp",
    "kua": "kj",
    "kur": "ku",
    "kvs": "gdj",
    "kwq": "yam",
    "kxe": "tvd",
    "kzj": "dtp",
    "kzt": "dtp",
    "lao": "lo",
    "lat": "la",
    "lav": "lv",
    "lbk": "bnc",
    "lii": "raq",
    "lim": "li",
    "lin": "ln",
    "lit": "lt",
    "lmm": "rmx",
    "ltz": "lb",
    "lub": "lu",
    "lug": "lg",
    "lvs": "lv",
    "mac": "mk",
    "mah": "mh",
    "mal": "ml",
    "mao": "mi",
    "mar": "mr",
    "may": "ms",
    "meg": "cir",
    "mhr": "chm",
    "mkd": "mk",
    "mlg": "mg",
    "mlt": "mt",
    "mnk": "man",
    "mo": "ro",
    "mol": "ro",
    "mon": "mn",
    "mri": "mi",
    "msa": "ms",
    "mst": "mry",
    "mup": "raj",
    "mwj": "vaj",
    "mya": "my",
    "myt": "mry",
    "nad": "xny",
    "nau": "na",
    "nav": "nv",
    "nbl": "nr",
    "ncp": "kdz",
    "nde": "nd",
    "ndo": "ng",
    "nep": "ne",
    "nld": "nl",
    "nno": "nn",
    "nnx": "ngv",
    "no": "nb",
    "nob": "nb",
    "nor": "nb",
    "npi": "ne",
    "nts": "pij",
    "nya": "ny",
    "oci": "oc",
    "ojg": "oj",
    "oji": "oj",
    "ori": "or",
    "orm": "om",
    "ory": "or",
    "oss": "os",
    "oun": "vaj",
    "pan": "pa",
    "pbu": "ps",
    "pcr": "adx",
    "per": "fa",
    "pes": "fa",
    "pli": "pi",
    "plt": "mg",
    "pmc": "huw",
    "pmu": "phr",
    "pnb": "lah",
    "pol": "pl",
    "por": "pt",
    "ppa": "bfy",
    "ppr": "lcq",
    "pry": "prt",
    "pus": "ps",
    "puz": "pub",
    "que": "qu",
    "quz": "qu",
    "rmy": "rom",
    "roh": "rm",
    "ron": "ro",
    "rum": "ro",
    "run": "rn",
    "rus": "ru",
    "sag": "sg",
    "san": "sa",
    "sca": "hle",
    "scc": "sr",
    "scr": "hr",
    "sin": "si",
    "skk": "oyb",
    "slk": "sk",
    "slo": "sk",
    "slv": "sl",
    "sme": "se",
    "smo": "sm",
    "sna": "sn",
    "snd": "sd",
    "som": "so",
    "sot": "st",
    "spa": "es",
    "spy": "kln",
    "sqi": "sq",
    "src": "sc",
    "srd": "sc",
    "srp": "sr",
    "ssw": "ss",
    "sun": "su",
    "swa": "sw",
    "swe": "sv",
    "swh": "sw",
    "tah": "ty",
    "tam": "ta",
    "tat": "tt",
    "tdu": "dtp",
    "tel": "te",
    "tgk": "tg",
    "tgl": "fil",
    "tha": "th",
    "thc": "tpo",
    "thx": "oyb",
    "tib": "bo",
    "tie": "ras",
    "tir": "ti",
    "tkk": "twm",
    "tl": "fil",
    "tlw": "weo",
    "tmp": "tyj",
    "tne": "kak",
    "ton": "to",
    "tsf": "taj",
    "tsn": "tn",
    "tso": "ts",
    "ttq": "tmh",
    "tuk": "tk",
    "tur": "tr",
    "tw": "ak",
    "twi": "ak",
    "uig": "ug",
    "ukr": "uk",
    "umu": "del",
    "uok": "ema",
    "urd": "ur",
    "uzb": "uz",
    "uzn": "uz",
    "ven": "ve",
    "vie": "vi",
    "vol": "vo",
    "wel": "cy",
    "wln": "wa",
    "wol": "wo",
    "xba": "cax",
    "xho": "xh",
    "xia": "acn",
    "xkh": "waw",
    "xpe": "kpe",
    "xsj": "suj",
    "xsl": "den",
    "ybd": "rki",
    "ydd": "yi",
    "yid": "yi",
    "yma": "lrr",
    "ymt": "mtm",
    "yor": "yo",
    "yos": "zom",
    "yuu": "yug",
    "zai": "zap",
    "zha": "za",
    "zho": "zh",
    "zsm": "ms",
    "zul": "zu",
    "zyb": "za",
};

// Language subtags with complex mappings.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
var complexLanguageMappings = {
    "cnr": true,
    "drw": true,
    "hbs": true,
    "prs": true,
    "sh": true,
    "swc": true,
    "tnf": true,
};

// Mappings from region subtags to preferred values.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
var regionMappings = {
    "004": "AF",
    "008": "AL",
    "010": "AQ",
    "012": "DZ",
    "016": "AS",
    "020": "AD",
    "024": "AO",
    "028": "AG",
    "031": "AZ",
    "032": "AR",
    "036": "AU",
    "040": "AT",
    "044": "BS",
    "048": "BH",
    "050": "BD",
    "051": "AM",
    "052": "BB",
    "056": "BE",
    "060": "BM",
    "062": "034",
    "064": "BT",
    "068": "BO",
    "070": "BA",
    "072": "BW",
    "074": "BV",
    "076": "BR",
    "084": "BZ",
    "086": "IO",
    "090": "SB",
    "092": "VG",
    "096": "BN",
    "100": "BG",
    "104": "MM",
    "108": "BI",
    "112": "BY",
    "116": "KH",
    "120": "CM",
    "124": "CA",
    "132": "CV",
    "136": "KY",
    "140": "CF",
    "144": "LK",
    "148": "TD",
    "152": "CL",
    "156": "CN",
    "158": "TW",
    "162": "CX",
    "166": "CC",
    "170": "CO",
    "174": "KM",
    "175": "YT",
    "178": "CG",
    "180": "CD",
    "184": "CK",
    "188": "CR",
    "191": "HR",
    "192": "CU",
    "196": "CY",
    "203": "CZ",
    "204": "BJ",
    "208": "DK",
    "212": "DM",
    "214": "DO",
    "218": "EC",
    "222": "SV",
    "226": "GQ",
    "230": "ET",
    "231": "ET",
    "232": "ER",
    "233": "EE",
    "234": "FO",
    "238": "FK",
    "239": "GS",
    "242": "FJ",
    "246": "FI",
    "248": "AX",
    "249": "FR",
    "250": "FR",
    "254": "GF",
    "258": "PF",
    "260": "TF",
    "262": "DJ",
    "266": "GA",
    "268": "GE",
    "270": "GM",
    "275": "PS",
    "276": "DE",
    "278": "DE",
    "280": "DE",
    "288": "GH",
    "292": "GI",
    "296": "KI",
    "300": "GR",
    "304": "GL",
    "308": "GD",
    "312": "GP",
    "316": "GU",
    "320": "GT",
    "324": "GN",
    "328": "GY",
    "332": "HT",
    "334": "HM",
    "336": "VA",
    "340": "HN",
    "344": "HK",
    "348": "HU",
    "352": "IS",
    "356": "IN",
    "360": "ID",
    "364": "IR",
    "368": "IQ",
    "372": "IE",
    "376": "IL",
    "380": "IT",
    "384": "CI",
    "388": "JM",
    "392": "JP",
    "398": "KZ",
    "400": "JO",
    "404": "KE",
    "408": "KP",
    "410": "KR",
    "414": "KW",
    "417": "KG",
    "418": "LA",
    "422": "LB",
    "426": "LS",
    "428": "LV",
    "430": "LR",
    "434": "LY",
    "438": "LI",
    "440": "LT",
    "442": "LU",
    "446": "MO",
    "450": "MG",
    "454": "MW",
    "458": "MY",
    "462": "MV",
    "466": "ML",
    "470": "MT",
    "474": "MQ",
    "478": "MR",
    "480": "MU",
    "484": "MX",
    "492": "MC",
    "496": "MN",
    "498": "MD",
    "499": "ME",
    "500": "MS",
    "504": "MA",
    "508": "MZ",
    "512": "OM",
    "516": "NA",
    "520": "NR",
    "524": "NP",
    "528": "NL",
    "531": "CW",
    "533": "AW",
    "534": "SX",
    "535": "BQ",
    "540": "NC",
    "548": "VU",
    "554": "NZ",
    "558": "NI",
    "562": "NE",
    "566": "NG",
    "570": "NU",
    "574": "NF",
    "578": "NO",
    "580": "MP",
    "581": "UM",
    "583": "FM",
    "584": "MH",
    "585": "PW",
    "586": "PK",
    "591": "PA",
    "598": "PG",
    "600": "PY",
    "604": "PE",
    "608": "PH",
    "612": "PN",
    "616": "PL",
    "620": "PT",
    "624": "GW",
    "626": "TL",
    "630": "PR",
    "634": "QA",
    "638": "RE",
    "642": "RO",
    "643": "RU",
    "646": "RW",
    "652": "BL",
    "654": "SH",
    "659": "KN",
    "660": "AI",
    "662": "LC",
    "663": "MF",
    "666": "PM",
    "670": "VC",
    "674": "SM",
    "678": "ST",
    "682": "SA",
    "686": "SN",
    "688": "RS",
    "690": "SC",
    "694": "SL",
    "702": "SG",
    "703": "SK",
    "704": "VN",
    "705": "SI",
    "706": "SO",
    "710": "ZA",
    "716": "ZW",
    "720": "YE",
    "724": "ES",
    "728": "SS",
    "729": "SD",
    "732": "EH",
    "736": "SD",
    "740": "SR",
    "744": "SJ",
    "748": "SZ",
    "752": "SE",
    "756": "CH",
    "760": "SY",
    "762": "TJ",
    "764": "TH",
    "768": "TG",
    "772": "TK",
    "776": "TO",
    "780": "TT",
    "784": "AE",
    "788": "TN",
    "792": "TR",
    "795": "TM",
    "796": "TC",
    "798": "TV",
    "800": "UG",
    "804": "UA",
    "807": "MK",
    "818": "EG",
    "826": "GB",
    "830": "JE",
    "831": "GG",
    "832": "JE",
    "833": "IM",
    "834": "TZ",
    "840": "US",
    "850": "VI",
    "854": "BF",
    "858": "UY",
    "860": "UZ",
    "862": "VE",
    "876": "WF",
    "882": "WS",
    "886": "YE",
    "887": "YE",
    "891": "RS",
    "894": "ZM",
    "958": "AA",
    "959": "QM",
    "960": "QN",
    "962": "QP",
    "963": "QQ",
    "964": "QR",
    "965": "QS",
    "966": "QT",
    "967": "EU",
    "968": "QV",
    "969": "QW",
    "970": "QX",
    "971": "QY",
    "972": "QZ",
    "973": "XA",
    "974": "XB",
    "975": "XC",
    "976": "XD",
    "977": "XE",
    "978": "XF",
    "979": "XG",
    "980": "XH",
    "981": "XI",
    "982": "XJ",
    "983": "XK",
    "984": "XL",
    "985": "XM",
    "986": "XN",
    "987": "XO",
    "988": "XP",
    "989": "XQ",
    "990": "XR",
    "991": "XS",
    "992": "XT",
    "993": "XU",
    "994": "XV",
    "995": "XW",
    "996": "XX",
    "997": "XY",
    "998": "XZ",
    "999": "ZZ",
    "BU": "MM",
    "CS": "RS",
    "CT": "KI",
    "DD": "DE",
    "DY": "BJ",
    "FQ": "AQ",
    "FX": "FR",
    "HV": "BF",
    "JT": "UM",
    "MI": "UM",
    "NH": "VU",
    "NQ": "AQ",
    "PU": "UM",
    "PZ": "PA",
    "QU": "EU",
    "RH": "ZW",
    "TP": "TL",
    "UK": "GB",
    "VD": "VN",
    "WK": "UM",
    "YD": "YE",
    "YU": "RS",
    "ZR": "CD",
};

// Region subtags with complex mappings.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
var complexRegionMappings = {
    "172": true,
    "200": true,
    "530": true,
    "532": true,
    "536": true,
    "582": true,
    "810": true,
    "890": true,
    "AN": true,
    "NT": true,
    "PC": true,
    "SU": true,
};

// Canonicalize Unicode BCP 47 locale identifiers.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
/* eslint-disable complexity */
function updateLocaleIdMappings(tag) {
    assert(IsObject(tag), "tag is an object");

    // Replace deprecated language tags with their preferred values.
    var language = tag.language;
    if (hasOwn(language, languageMappings)) {
        tag.language = languageMappings[language];
    } else if (hasOwn(language, complexLanguageMappings)) {
        switch (language) {
          case "cnr":
            tag.language = "sr";
            if (tag.region === undefined)
                tag.region = "ME";
            break;
          case "drw":
          case "prs":
          case "tnf":
            tag.language = "fa";
            if (tag.region === undefined)
                tag.region = "AF";
            break;
          case "hbs":
          case "sh":
            tag.language = "sr";
            if (tag.script === undefined)
                tag.script = "Latn";
            break;
          case "swc":
            tag.language = "sw";
            if (tag.region === undefined)
                tag.region = "CD";
            break;
          default:
            assert(false, "language not handled: " + language);
        }
    }

    // No script replacements are currently present.

    // Replace deprecated subtags with their preferred values.
    var region = tag.region;
    if (region !== undefined) {
        if (hasOwn(region, regionMappings)) {
            tag.region = regionMappings[region];
        } else if (hasOwn(region, complexRegionMappings)) {
            switch (region) {
              case "172":
                if (tag.language === "ab") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "az") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "be") {
                    tag.region = "BY";
                    break;
                }
                if (tag.language === "crh") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "gag") {
                    tag.region = "MD";
                    break;
                }
                if (tag.language === "got") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "hy") {
                    tag.region = "AM";
                    break;
                }
                if (tag.language === "ji") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "ka") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "kaa") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "kk") {
                    tag.region = "KZ";
                    break;
                }
                if (tag.language === "ky") {
                    tag.region = "KG";
                    break;
                }
                if (tag.language === "os") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "rue") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "sog") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "tg") {
                    tag.region = "TJ";
                    break;
                }
                if (tag.language === "tk") {
                    tag.region = "TM";
                    break;
                }
                if (tag.language === "tkr") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "tly") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "ttt") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "ug" && tag.script === "Cyrl") {
                    tag.region = "KZ";
                    break;
                }
                if (tag.language === "uk") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "und" && tag.script === "Armn") {
                    tag.region = "AM";
                    break;
                }
                if (tag.language === "und" && tag.script === "Sogd") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "und" && tag.script === "Geor") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "und" && tag.script === "Goth") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "und" && tag.script === "Sogo") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "uz") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "xmf") {
                    tag.region = "GE";
                    break;
                }
                tag.region = "RU";
                break;
              case "200":
                if (tag.language === "sk") {
                    tag.region = "SK";
                    break;
                }
                tag.region = "CZ";
                break;
              case "530":
              case "532":
              case "AN":
                if (tag.language === "vic") {
                    tag.region = "SX";
                    break;
                }
                tag.region = "CW";
                break;
              case "536":
              case "NT":
                if (tag.language === "akk") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "ckb") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "ku" && tag.script === "Arab") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "mis") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "syr") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "und" && tag.script === "Xsux") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "und" && tag.script === "Hatr") {
                    tag.region = "IQ";
                    break;
                }
                if (tag.language === "und" && tag.script === "Syrc") {
                    tag.region = "IQ";
                    break;
                }
                tag.region = "SA";
                break;
              case "582":
              case "PC":
                if (tag.language === "mh") {
                    tag.region = "MH";
                    break;
                }
                if (tag.language === "pau") {
                    tag.region = "PW";
                    break;
                }
                tag.region = "FM";
                break;
              case "810":
              case "SU":
                if (tag.language === "ab") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "az") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "be") {
                    tag.region = "BY";
                    break;
                }
                if (tag.language === "crh") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "et") {
                    tag.region = "EE";
                    break;
                }
                if (tag.language === "gag") {
                    tag.region = "MD";
                    break;
                }
                if (tag.language === "got") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "hy") {
                    tag.region = "AM";
                    break;
                }
                if (tag.language === "ji") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "ka") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "kaa") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "kk") {
                    tag.region = "KZ";
                    break;
                }
                if (tag.language === "ky") {
                    tag.region = "KG";
                    break;
                }
                if (tag.language === "lt") {
                    tag.region = "LT";
                    break;
                }
                if (tag.language === "ltg") {
                    tag.region = "LV";
                    break;
                }
                if (tag.language === "lv") {
                    tag.region = "LV";
                    break;
                }
                if (tag.language === "os") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "rue") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "sgs") {
                    tag.region = "LT";
                    break;
                }
                if (tag.language === "sog") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "tg") {
                    tag.region = "TJ";
                    break;
                }
                if (tag.language === "tk") {
                    tag.region = "TM";
                    break;
                }
                if (tag.language === "tkr") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "tly") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "ttt") {
                    tag.region = "AZ";
                    break;
                }
                if (tag.language === "ug" && tag.script === "Cyrl") {
                    tag.region = "KZ";
                    break;
                }
                if (tag.language === "uk") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "und" && tag.script === "Armn") {
                    tag.region = "AM";
                    break;
                }
                if (tag.language === "und" && tag.script === "Sogd") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "und" && tag.script === "Geor") {
                    tag.region = "GE";
                    break;
                }
                if (tag.language === "und" && tag.script === "Goth") {
                    tag.region = "UA";
                    break;
                }
                if (tag.language === "und" && tag.script === "Sogo") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "uz") {
                    tag.region = "UZ";
                    break;
                }
                if (tag.language === "vro") {
                    tag.region = "EE";
                    break;
                }
                if (tag.language === "xmf") {
                    tag.region = "GE";
                    break;
                }
                tag.region = "RU";
                break;
              case "890":
                if (tag.language === "bs") {
                    tag.region = "BA";
                    break;
                }
                if (tag.language === "hr") {
                    tag.region = "HR";
                    break;
                }
                if (tag.language === "mk") {
                    tag.region = "MK";
                    break;
                }
                if (tag.language === "sl") {
                    tag.region = "SI";
                    break;
                }
                tag.region = "RS";
                break;
              default:
                assert(false, "region not handled: " + region);
            }
        }

        // No variant replacements are currently present.
        // No extension replacements are currently present.
        // Private use sequences are left as is.

    }
}
/* eslint-enable complexity */

// Canonicalize grandfathered locale identifiers.
// Derived from CLDR Supplemental Data, version 35.1.
// https://github.com/unicode-org/cldr.git
function updateGrandfatheredMappings(tag) {
    assert(IsObject(tag), "tag is an object");

    // We're mapping regular grandfathered tags to non-grandfathered form here.
    // Other tags remain unchanged.
    //
    // regular       = "art-lojban"
    //               / "cel-gaulish"
    //               / "no-bok"
    //               / "no-nyn"
    //               / "zh-guoyu"
    //               / "zh-hakka"
    //               / "zh-min"
    //               / "zh-min-nan"
    //               / "zh-xiang"
    //
    // Therefore we can quickly exclude most tags by checking every
    // |unicode_locale_id| subcomponent for characteristics not shared by any of
    // the regular grandfathered (RG) tags:
    //
    //   * Real-world |unicode_language_subtag|s are all two or three letters,
    //     so don't waste time running a useless |language.length > 3| fast-path.
    //   * No RG tag has a "script"-looking component.
    //   * No RG tag has a "region"-looking component.
    //   * The RG tags that match |unicode_locale_id| (art-lojban, cel-gaulish,
    //     zh-guoyu, zh-hakka, zh-xiang) have exactly one "variant". (no-bok,
    //     no-nyn, zh-min, and zh-min-nan require BCP47's extlang subtag
    //     that |unicode_locale_id| doesn't support.)
    //   * No RG tag contains |extensions| or |pu_extensions|.
    if (tag.script !== undefined ||
        tag.region !== undefined ||
        tag.variants.length !== 1 ||
        tag.extensions.length !== 0 ||
        tag.privateuse !== undefined)
    {
        return;
    }

    // art-lojban -> jbo
    if (tag.language === "art" && tag.variants[0] === "lojban") {
        tag.language = "jbo";
        tag.variants.length = 0;
    }

    // cel-gaulish -> xtg-x-cel-gaulish
    else if (tag.language === "cel" && tag.variants[0] === "gaulish") {
        tag.language = "xtg";
        tag.variants.length = 0;
        tag.privateuse = "x-cel-gaulish";
    }

    // zh-guoyu -> zh
    else if (tag.language === "zh" && tag.variants[0] === "guoyu") {
        tag.language = "zh";
        tag.variants.length = 0;
    }

    // zh-hakka -> hak
    else if (tag.language === "zh" && tag.variants[0] === "hakka") {
        tag.language = "hak";
        tag.variants.length = 0;
    }

    // zh-xiang -> hsn
    else if (tag.language === "zh" && tag.variants[0] === "xiang") {
        tag.language = "hsn";
        tag.variants.length = 0;
    }
}
