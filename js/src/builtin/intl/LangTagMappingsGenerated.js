// Generated by make_intl_data.py. DO NOT EDIT.

/* eslint-disable complexity */
// Mappings from complete tags to preferred values.
// Derived from IANA Language Subtag Registry, file date 2019-02-20.
// https://www.iana.org/assignments/language-subtag-registry
function updateLangTagMappings(tag) {
    assert(IsObject(tag), "tag is an object");
    assert(!hasOwn("grandfathered", tag), "tag is not a grandfathered tag");

    switch (tag.language) {
      case "hy":
        // hy-arevela -> hy
        if (tag.variants.length >= 1 &&
            callFunction(ArrayIndexOf, tag.variants, "arevela") > -1)
        {
            var newVariants = [];
            for (var i = 0; i < tag.variants.length; i++) {
                var variant = tag.variants[i];
                if (variant === "arevela")
                    continue;
                _DefineDataProperty(newVariants, newVariants.length, variant);
            }
            tag.variants = newVariants;
        }
        // hy-arevmda -> hyw
        else if (tag.variants.length >= 1 &&
                 callFunction(ArrayIndexOf, tag.variants, "arevmda") > -1)
        {
            tag.language = "hyw";
            var newVariants = [];
            for (var i = 0; i < tag.variants.length; i++) {
                var variant = tag.variants[i];
                if (variant === "arevmda")
                    continue;
                _DefineDataProperty(newVariants, newVariants.length, variant);
            }
            tag.variants = newVariants;
        }
        break;
      case "ja":
        // ja-Latn-hepburn-heploc -> ja-Latn-alalc97
        if (tag.script === "Latn" &&
            tag.variants.length >= 2 &&
            callFunction(ArrayIndexOf, tag.variants, "hepburn") > -1 &&
            callFunction(ArrayIndexOf, tag.variants, "heploc", callFunction(ArrayIndexOf, tag.variants, "hepburn") + 1) > -1)
        {
            var newVariants = [];
            for (var i = 0; i < tag.variants.length; i++) {
                var variant = tag.variants[i];
                if (variant === "hepburn")
                    continue;
                if (variant === "heploc")
                    continue;
                _DefineDataProperty(newVariants, newVariants.length, variant);
            }
            if (callFunction(ArrayIndexOf, newVariants, "alalc97") < 0)
                _DefineDataProperty(newVariants, newVariants.length, "alalc97");
            tag.variants = newVariants;
        }
        break;
      case "sgn":
        // sgn-BR -> bzs
        if (tag.region === "BR" &&
            tag.script === undefined &&
            tag.variants.length === 0 &&
            tag.extensions.length === 0 &&
            tag.privateuse === undefined)
        {
            tag.language = "bzs";
            tag.region = undefined;
        }
        // sgn-CO -> csn
        else if (tag.region === "CO" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "csn";
            tag.region = undefined;
        }
        // sgn-DE -> gsg
        else if (tag.region === "DE" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "gsg";
            tag.region = undefined;
        }
        // sgn-DK -> dsl
        else if (tag.region === "DK" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "dsl";
            tag.region = undefined;
        }
        // sgn-ES -> ssp
        else if (tag.region === "ES" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "ssp";
            tag.region = undefined;
        }
        // sgn-FR -> fsl
        else if (tag.region === "FR" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "fsl";
            tag.region = undefined;
        }
        // sgn-GB -> bfi
        else if (tag.region === "GB" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "bfi";
            tag.region = undefined;
        }
        // sgn-GR -> gss
        else if (tag.region === "GR" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "gss";
            tag.region = undefined;
        }
        // sgn-IE -> isg
        else if (tag.region === "IE" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "isg";
            tag.region = undefined;
        }
        // sgn-IT -> ise
        else if (tag.region === "IT" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "ise";
            tag.region = undefined;
        }
        // sgn-JP -> jsl
        else if (tag.region === "JP" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "jsl";
            tag.region = undefined;
        }
        // sgn-MX -> mfs
        else if (tag.region === "MX" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "mfs";
            tag.region = undefined;
        }
        // sgn-NI -> ncs
        else if (tag.region === "NI" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "ncs";
            tag.region = undefined;
        }
        // sgn-NL -> dse
        else if (tag.region === "NL" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "dse";
            tag.region = undefined;
        }
        // sgn-NO -> nsl
        else if (tag.region === "NO" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "nsl";
            tag.region = undefined;
        }
        // sgn-PT -> psr
        else if (tag.region === "PT" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "psr";
            tag.region = undefined;
        }
        // sgn-SE -> swl
        else if (tag.region === "SE" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "swl";
            tag.region = undefined;
        }
        // sgn-US -> ase
        else if (tag.region === "US" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "ase";
            tag.region = undefined;
        }
        // sgn-ZA -> sfs
        else if (tag.region === "ZA" &&
                 tag.script === undefined &&
                 tag.variants.length === 0 &&
                 tag.extensions.length === 0 &&
                 tag.privateuse === undefined)
        {
            tag.language = "sfs";
            tag.region = undefined;
        }
        break;
    }
}
/* eslint-enable complexity */

// Mappings from grandfathered tags to preferred values.
// Derived from IANA Language Subtag Registry, file date 2019-02-20.
// https://www.iana.org/assignments/language-subtag-registry
var grandfatheredMappings = {
    "art-lojban": "jbo",
    "cel-gaulish": "cel-gaulish",
    "zh-guoyu": "cmn",
    "zh-hakka": "hak",
    "zh-xiang": "hsn",
};

// Mappings from language subtags to preferred values.
// Derived from IANA Language Subtag Registry, file date 2019-02-20.
// https://www.iana.org/assignments/language-subtag-registry
var languageMappings = {
    "aam": "aas",
    "adp": "dz",
    "aue": "ktz",
    "ayx": "nun",
    "bgm": "bcg",
    "bjd": "drl",
    "ccq": "rki",
    "cjr": "mom",
    "cka": "cmr",
    "cmk": "xch",
    "coy": "pij",
    "cqu": "quh",
    "drh": "khk",
    "drw": "prs",
    "gav": "dev",
    "gfx": "vaj",
    "ggn": "gvr",
    "gti": "nyc",
    "guv": "duz",
    "hrr": "jal",
    "ibi": "opa",
    "ilw": "gal",
    "in": "id",
    "iw": "he",
    "jeg": "oyb",
    "ji": "yi",
    "jw": "jv",
    "kgc": "tdf",
    "kgh": "kml",
    "koj": "kwv",
    "krm": "bmf",
    "ktr": "dtp",
    "kvs": "gdj",
    "kwq": "yam",
    "kxe": "tvd",
    "kzj": "dtp",
    "kzt": "dtp",
    "lii": "raq",
    "lmm": "rmx",
    "meg": "cir",
    "mo": "ro",
    "mst": "mry",
    "mwj": "vaj",
    "myt": "mry",
    "nad": "xny",
    "ncp": "kdz",
    "nnx": "ngv",
    "nts": "pij",
    "oun": "vaj",
    "pcr": "adx",
    "pmc": "huw",
    "pmu": "phr",
    "ppa": "bfy",
    "ppr": "lcq",
    "pry": "prt",
    "puz": "pub",
    "sca": "hle",
    "skk": "oyb",
    "tdu": "dtp",
    "thc": "tpo",
    "thx": "oyb",
    "tie": "ras",
    "tkk": "twm",
    "tlw": "weo",
    "tmp": "tyj",
    "tne": "kak",
    "tnf": "prs",
    "tsf": "taj",
    "uok": "ema",
    "xba": "cax",
    "xia": "acn",
    "xkh": "waw",
    "xsj": "suj",
    "ybd": "rki",
    "yma": "lrr",
    "ymt": "mtm",
    "yos": "zom",
    "yuu": "yug",
};

// Mappings from region subtags to preferred values.
// Derived from IANA Language Subtag Registry, file date 2019-02-20.
// https://www.iana.org/assignments/language-subtag-registry
var regionMappings = {
    "BU": "MM",
    "DD": "DE",
    "FX": "FR",
    "TP": "TL",
    "YD": "YE",
    "ZR": "CD",
};
