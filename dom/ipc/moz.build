# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

XPIDL_SOURCES += [
    'nsIHangReport.idl',
]

XPIDL_MODULE = 'dom'

EXPORTS.mozilla.dom.ipc += [
    'IdType.h',
    'StructuredCloneData.h',
]

EXPORTS.mozilla.dom += [
    'ContentBridgeChild.h',
    'ContentBridgeParent.h',
    'ContentChild.h',
    'ContentParent.h',
    'ContentProcess.h',
    'ContentProcessManager.h',
    'CPOWManagerGetter.h',
    'CrashReporterChild.h',
    'CrashReporterParent.h',
    'FilePickerParent.h',
    'MemoryReportRequest.h',
    'nsIContentChild.h',
    'nsIContentParent.h',
    'PermissionMessageUtils.h',
    'TabChild.h',
    'TabContext.h',
    'TabMessageUtils.h',
    'TabParent.h',
    'URLClassifierChild.h',
    'URLClassifierParent.h',
]

EXPORTS.mozilla += [
    'ProcessHangMonitor.h',
    'ProcessHangMonitorIPC.h',
    'ProcessPriorityManager.h',
]

UNIFIED_SOURCES += [
    'ColorPickerParent.cpp',
    'ContentBridgeChild.cpp',
    'ContentBridgeParent.cpp',
    'ContentParent.cpp',
    'ContentProcess.cpp',
    'ContentProcessManager.cpp',
    'CrashReporterParent.cpp',
    'DatePickerParent.cpp',
    'FilePickerParent.cpp',
    'MemoryReportRequest.cpp',
    'nsIContentChild.cpp',
    'nsIContentParent.cpp',
    'PermissionMessageUtils.cpp',
    'ProcessPriorityManager.cpp',
    'ScreenManagerParent.cpp',
    'StructuredCloneData.cpp',
    'TabChild.cpp',
    'TabContext.cpp',
    'TabMessageUtils.cpp',
    'TabParent.cpp',
    'URLClassifierChild.cpp',
    'URLClassifierParent.cpp',
]

# CrashReporterChild.cpp cannot be compiled in unified mode because of name clashes
# in OS X headers.
# ContentChild.cpp cannot be compiled in unified mode on  linux due to Time conflict
SOURCES += [
    'ContentChild.cpp',
    'CrashReporterChild.cpp',
    'ProcessHangMonitor.cpp',
]

IPDL_SOURCES += [
    'DOMTypes.ipdlh',
    'MemoryReportTypes.ipdlh',
    'PBrowser.ipdl',
    'PBrowserOrId.ipdlh',
    'PColorPicker.ipdl',
    'PContent.ipdl',
    'PContentBridge.ipdl',
    'PContentPermission.ipdlh',
    'PContentPermissionRequest.ipdl',
    'PCrashReporter.ipdl',
    'PCycleCollectWithLogs.ipdl',
    'PDatePicker.ipdl',
    'PDocumentRenderer.ipdl',
    'PFilePicker.ipdl',
    'PPluginWidget.ipdl',
    'PProcessHangMonitor.ipdl',
    'PScreenManager.ipdl',
    'PTabContext.ipdlh',
    'PURLClassifier.ipdl',
    'ServiceWorkerConfiguration.ipdlh',
]

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'xul'

if CONFIG['MOZ_SANDBOX'] and CONFIG['OS_TARGET'] == 'Darwin':
    USE_LIBS += [
        'mozsandbox',
    ]

if CONFIG['MOZ_CONTENT_SANDBOX'] and CONFIG['OS_ARCH'] == 'Linux':
    USE_LIBS += [
        'mozsandbox',
    ]

LOCAL_INCLUDES += [
    '/caps',
    '/chrome',
    '/docshell/base',
    '/dom/base',
    '/dom/devicestorage',
    '/dom/events',
    '/dom/filesystem',
    '/dom/geolocation',
    '/dom/media/webspeech/synth/ipc',
    '/dom/security',
    '/dom/storage',
    '/dom/workers',
    '/extensions/cookie',
    '/extensions/spellcheck/src',
    '/gfx/2d',
    '/hal/sandbox',
    '/layout/base',
    '/media/webrtc',
    '/netwerk/base',
    '/toolkit/components/printingui/ipc',
    '/toolkit/crashreporter',
    '/toolkit/xre',
    '/uriloader/exthandler',
    '/widget',
    '/xpcom/base',
    '/xpcom/threads',
]

if CONFIG['MOZ_SANDBOX'] and CONFIG['OS_ARCH'] == 'WINNT':
    LOCAL_INCLUDES += [
        '/security/sandbox/chromium',
        '/security/sandbox/chromium-shim',
    ]

if CONFIG['OS_ARCH'] != 'WINNT':
    LOCAL_INCLUDES += [
        '/modules/libjar',
    ]

DEFINES['BIN_SUFFIX'] = '"%s"' % CONFIG['BIN_SUFFIX']

if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'gtk2', 'gonk'):
    DEFINES['MOZ_ENABLE_FREETYPE'] = True

if CONFIG['MOZ_TOOLKIT_SEARCH']:
    DEFINES['MOZ_TOOLKIT_SEARCH'] = True

JAR_MANIFESTS += ['jar.mn']

BROWSER_CHROME_MANIFESTS += ['tests/browser.ini']
MOCHITEST_CHROME_MANIFESTS += ['tests/chrome.ini']
MOCHITEST_MANIFESTS += ['tests/mochitest.ini']

CXXFLAGS += CONFIG['TK_CFLAGS']

if CONFIG['GNU_CXX']:
    CXXFLAGS += ['-Wno-error=shadow']
