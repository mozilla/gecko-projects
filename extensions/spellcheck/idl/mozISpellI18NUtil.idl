/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

[scriptable, uuid(B075D5DC-1DF1-441A-BEBF-680D8CAAA19C)]

/**
 * This interface contains various I18N related code used in various places by the spell checker.
 */

interface mozISpellI18NUtil : nsISupports {

    const uint32_t kCheck=0;
    const uint32_t kSuggest=1;

   /**
    * The language being used to check spelling
    */
    readonly attribute wstring language;
    
   /**
    * Given a word return a list of possible root forms of that word
    */
    void getRootForm(in wstring word,
                     in uint32_t type,
                     [array, size_is(count)] out wstring words,
                     out uint32_t count);
    
   /**
    * Given a word return a list of possible root forms of that word
    */
    void fromRootForm(in wstring word,
                      [array, size_is(icount)] in wstring iwords,
                      in uint32_t icount,
                      [array, size_is(ocount)] out wstring owords,
                      out uint32_t ocount);
    
    /**
     * Given a unicode string and an offset, find the beginning and end of the
     * next word. begin and end are -1 if there are no words remaining in the 
     * string. This should really be folded into the Line/WordBreaker.
     */
    void findNextWord(in wstring word, in uint32_t length, in uint32_t offset, out int32_t begin, out int32_t end); 
};
