/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: sw=2 ts=8 et :
 */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include LayersSurfaces;
include LayersMessages;
include protocol PTexture;

using WrBorderRadius from "mozilla/webrender/webrender_ffi.h";
using WrBorderSide from "mozilla/webrender/webrender_ffi.h";
using WrColor from "mozilla/webrender/webrender_ffi.h";
using WrLayoutSize from "mozilla/webrender/webrender_ffi.h";
using WrRect from "mozilla/webrender/webrender_ffi.h";
using WrPoint from "mozilla/webrender/webrender_ffi.h";
using WrGradientStop from "mozilla/webrender/webrender_ffi.h";
using WrGradientExtendMode from "mozilla/webrender/webrender_ffi.h";
using WrGlyphArray from "mozilla/webrender/webrender_ffi.h";
using WrMixBlendMode from "mozilla/webrender/webrender_ffi.h";
using WrBoxShadowClipMode from "mozilla/webrender/webrender_ffi.h";
using MaybeImageMask from "mozilla/webrender/WebRenderTypes.h";
using mozilla::gfx::Matrix4x4 from "mozilla/gfx/Matrix.h";
using mozilla::wr::ByteBuffer from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::PipelineId from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::ImageRendering from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::ImageKey from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::FontKey from "mozilla/webrender/WebRenderTypes.h";
using mozilla::LayerIntRegion from "Units.h";

namespace mozilla {
namespace layers {

struct OpDPPushStackingContext {
  WrRect bounds;
  WrRect overflow;
  MaybeImageMask mask;
  float opacity;
  Animation[] animations;
  Matrix4x4 matrix;
  WrMixBlendMode mixBlendMode;
  uint64_t scrollid;
};

struct OpDPPopStackingContext { };

struct OpDPPushScrollLayer {
  WrRect bounds;
  WrRect overflow;
  MaybeImageMask mask;
  uint64_t scrollid;
};

struct OpDPPopScrollLayer { };

struct OpDPPushRect {
  WrRect bounds;
  WrRect clip;
  WrColor color;
};

struct OpDPPushBorder {
  WrRect bounds;
  WrRect clip;
  WrBorderSide top;
  WrBorderSide right;
  WrBorderSide bottom;
  WrBorderSide left;
  WrBorderRadius radius;
};

struct OpDPPushLinearGradient {
  WrRect bounds;
  WrRect clip;
  WrPoint startPoint;
  WrPoint endPoint;
  WrGradientExtendMode extendMode;
  WrGradientStop[] stops;
};

struct OpDPPushRadialGradient {
  WrRect bounds;
  WrRect clip;
  WrPoint startCenter;
  WrPoint endCenter;
  float startRadius;
  float endRadius;
  WrGradientExtendMode extendMode;
  WrGradientStop[] stops;
};

struct OpDPPushImage {
  WrRect bounds;
  WrRect clip;
  MaybeImageMask mask;
  ImageRendering filter;
  ImageKey key;
};

struct OpAddExternalImage {
  uint64_t externalImageId;
  ImageKey key;
};

struct OpDPPushIframe {
  WrRect bounds;
  WrRect clip;
  PipelineId pipelineId;
};

struct OpDPPushText {
  WrRect bounds;
  WrRect clip;
  WrGlyphArray[] glyph_array;
  float glyph_size;
  FontKey key;
};

struct OpDPPushBoxShadow {
  WrRect rect;
  WrRect clip;
  WrRect box_bounds;
  WrPoint offset;
  WrColor color;
  float blur_radius;
  float spread_radius;
  float border_radius;
  WrBoxShadowClipMode clip_mode;
};

union WebRenderCommand {
  OpDPPushStackingContext;
  OpDPPopStackingContext;
  OpDPPushScrollLayer;
  OpDPPopScrollLayer;
  OpDPPushRect;
  OpDPPushBorder;
  OpDPPushLinearGradient;
  OpDPPushRadialGradient;
  OpDPPushImage;
  OpDPPushIframe;
  OpDPPushText;
  OpDPPushBoxShadow;
};

union WebRenderParentCommand {
  OpAddExternalImage;
  CompositableOperation;
};

} // namespace
} // namespace
