From ba04b00435a0853f1499d751617177828ee8ec00 Mon Sep 17 00:00:00 2001
From: Andreas Persson <andreasp56@outlook.com>
Date: Fri, 19 Jun 2015 18:04:33 +0200
Subject: [PATCH 2/2] hfslib: set permissions when extracting

---
 hfs/hfslib.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/hfs/hfslib.c b/hfs/hfslib.c
index 390fef6..95947ef 100644
--- a/hfs/hfslib.c
+++ b/hfs/hfslib.c
@@ -410,8 +410,9 @@ static void extractOne(HFSCatalogNodeID folderID, char* name, HFSPlusCatalogReco
 		}
 		ASSERT(chdir(name) == 0, "chdir");
 		extractAllInFolder(folder->folderID, volume);
-		// TODO: chmod, chown . now that contents are extracted
+		// TODO: chown . now that contents are extracted
 		ASSERT(chdir(cwd) == 0, "chdir");
+		chmod(name, folder->permissions.fileMode & 07777);
 	} else if(record->recordType == kHFSPlusFileRecord) {
 		file = (HFSPlusCatalogFile*)record;
 		fileType = file->permissions.fileMode & S_IFMT;
@@ -446,8 +447,14 @@ static void extractOne(HFSCatalogNodeID folderID, char* name, HFSPlusCatalogReco
 			outFile = createAbstractFileFromFile(fopen(name, "wb"));
 			if(outFile != NULL) {
 				writeToFile(file, outFile, volume);
-				// TODO: fchmod, fchown to replicate permissions
+				// TODO: fchown to replicate ownership
+#ifndef WIN32
+				fchmod(fileno((FILE*)outFile->data), file->permissions.fileMode & 07777);
+#endif
 				outFile->close(outFile);
+#ifdef WIN32
+				chmod(name, file->permissions.fileMode & 07777);
+#endif
 			} else {
 				printf("WARNING: cannot fopen %s\n", name);
 			}
-- 
2.9.3

