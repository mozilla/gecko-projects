# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

with Files('**'):
    BUG_COMPONENT = ('Core', 'Preferences: Backend')

if CONFIG['ENABLE_TESTS']:
    DIRS += ['test/gtest']

XPCSHELL_TESTS_MANIFESTS += [
    'test/unit/xpcshell.ini',
    'test/unit_ipc/xpcshell.ini',
]

XPIDL_SOURCES += [
    'nsIPrefBranch.idl',
    'nsIPrefLocalizedString.idl',
    'nsIPrefService.idl',
    'nsIRelativeFilePref.idl',
]

XPIDL_MODULE = 'pref'

pref_groups = [
    'accessibility',
    'apz',
    'beacon',
    'browser',
    'canvas',
    'channelclassifier',
    'clipboard',
    'device',
    'devtools',
    'dom',
    'editor',
    'extensions',
    'fission',
    'full_screen_api',
    'general',
    'geo',
    'gfx',
    'gl',
    'html5',
    'idle_period',
    'image',
    'intl',
    'javascript',
    'keyword',
    'layers',
    'layout',
    'media',
    'mousewheel',
    'network',
    'nglayout',
    'plain_text',
    'plugins',
    'preferences',
    'print',
    'privacy',
    'security',
    'slider',
    'svg',
    'telemetry',
    'test',
    'threads',
    'toolkit',
    'ui',
    'view_source',
    'webgl',
    'widget',
    'xul',
]
if CONFIG['OS_TARGET'] == 'Android':
    pref_groups += [
        'consoleservice'
    ]
if CONFIG['FUZZING']:
    pref_groups += [
        'fuzzing'
    ]
pref_groups = tuple(sorted(pref_groups))

UNIFIED_SOURCES += [
    'Preferences.cpp',
    'SharedPrefMap.cpp',
]

# Note: generate_static_pref_list relies on StaticPrefListAll.h being first.
genfiles = ['init/StaticPrefListAll.h']
genfiles += ['init/StaticPrefList_{}.h'.format(pg) for pg in pref_groups]
genfiles += ['StaticPrefsAll.h']
genfiles += ['StaticPrefs_{}.h'.format(pg) for pg in pref_groups]
genfiles_tuple = tuple(genfiles)

EXPORTS.mozilla += [
    'init/StaticPrefListBegin.h',
    'init/StaticPrefListEnd.h',
    'nsRelativeFilePref.h',
    'Preferences.h',
    'StaticPrefsBase.h',
]
EXPORTS.mozilla += sorted(['!' + gf for gf in genfiles])

GENERATED_FILES += [genfiles_tuple]

static_pref_list = GENERATED_FILES[genfiles_tuple]
static_pref_list.script = 'init/generate_static_pref_list.py:emit_header'
static_pref_list.inputs = ['init/StaticPrefList.yaml']

PYTHON_UNITTEST_MANIFESTS += [
    'test/python.ini',
]

XPCOM_MANIFESTS += [
    'components.conf',
]

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'xul'

DEFINES['OS_ARCH'] = CONFIG['OS_ARCH']
DEFINES['MOZ_WIDGET_TOOLKIT'] = CONFIG['MOZ_WIDGET_TOOLKIT']

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'android':
    if not CONFIG['MOZ_ANDROID_FAT_AAR_ARCHITECTURES']:
        FINAL_TARGET_PP_FILES[CONFIG['ANDROID_CPU_ARCH']] += [
            'greprefs.js',
        ]
    else:
        for arch in CONFIG['MOZ_ANDROID_FAT_AAR_ARCHITECTURES']:
            FINAL_TARGET_FILES[arch] += [
                 '!/dist/fat-aar/output/{arch}/greprefs.js'.format(arch=arch),
            ]
else:
    FINAL_TARGET_PP_FILES += [
        'greprefs.js',
    ]
