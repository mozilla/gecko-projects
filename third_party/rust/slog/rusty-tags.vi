!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ASCII_LOWERCASE_MAP	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^static ASCII_LOWERCASE_MAP: [u8; 256] =$/;"	c
AnyTerminal	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^enum AnyTerminal {$/;"	g
AsFmtSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^struct AsFmtSerializer<F>(pub F)$/;"	s
Async	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Async {$/;"	i
Async	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub struct Async {$/;"	s
AsyncBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl<D> AsyncBuilder<D>$/;"	i
AsyncBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub struct AsyncBuilder<D>$/;"	s
AsyncCore	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl AsyncCore {$/;"	i
AsyncCore	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub struct AsyncCore {$/;"	s
AsyncCoreBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl<D> AsyncCoreBuilder<D>$/;"	i
AsyncCoreBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub struct AsyncCoreBuilder<D>$/;"	s
AsyncError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub enum AsyncError {$/;"	g
AsyncGuard	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub struct AsyncGuard {$/;"	s
AsyncMsg	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^enum AsyncMsg {$/;"	g
AsyncRecord	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^struct AsyncRecord {$/;"	s
AsyncResult	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^pub type AsyncResult<T> = std::result::Result<T, AsyncError>;$/;"	T
BorrowedKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct BorrowedKV<'a>($/;"	s
CheckOwned	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^        struct CheckOwned;$/;"	s
CompactFormat	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<D> CompactFormat<D>$/;"	i
CompactFormat	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct CompactFormat<D>$/;"	s
CompactFormatBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<D> CompactFormatBuilder<D>$/;"	i
CompactFormatBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct CompactFormatBuilder<D>$/;"	s
CompactFormatSerializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> CompactFormatSerializer<'a> {$/;"	i
CompactFormatSerializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^struct CompactFormatSerializer<'a> {$/;"	s
CountingWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> CountingWriter<'a> {$/;"	i
CountingWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^struct CountingWriter<'a> {$/;"	s
Decorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub trait Decorator {$/;"	t
Decorator for Box	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<T: ?Sized> Decorator for Box<T>$/;"	i
Decorator for PlainDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> Decorator for PlainDecorator<W>$/;"	i
Decorator for PlainSyncDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> Decorator for PlainSyncDecorator<W>$/;"	i
Decorator for TermDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl Decorator for TermDecorator {$/;"	i
Discard	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct Discard;$/;"	s
Drain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait Drain {$/;"	t
Drain for Arc	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain + ?Sized> Drain for Arc<D> {$/;"	i
Drain for Async	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Drain for Async {$/;"	i
Drain for AsyncCore	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Drain for AsyncCore {$/;"	i
Drain for Box	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain + ?Sized> Drain for Box<D> {$/;"	i
Drain for CheckOwned	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^        impl Drain for CheckOwned {$/;"	i
Drain for CompactFormat	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<D> Drain for CompactFormat<D>$/;"	i
Drain for Discard	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl Drain for Discard {$/;"	i
Drain for Duplicate	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D1: Drain, D2: Drain> Drain for Duplicate<D1, D2> {$/;"	i
Drain for Filter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain, F> Drain for Filter<D, F>$/;"	i
Drain for FullFormat	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<D> Drain for FullFormat<D>$/;"	i
Drain for Fuse	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> Drain for Fuse<D>$/;"	i
Drain for IgnoreResult	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> Drain for IgnoreResult<D> {$/;"	i
Drain for LevelFilter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> Drain for LevelFilter<D> {$/;"	i
Drain for Logger	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D> Drain for Logger<D>$/;"	i
Drain for MapError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain, E> Drain for MapError<D, E> {$/;"	i
Drain for std	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> Drain for std::sync::Mutex<D> {$/;"	i
Drop for Async	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Drop for Async {$/;"	i
Drop for AsyncCore	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Drop for AsyncCore {$/;"	i
Drop for AsyncGuard	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Drop for AsyncGuard {$/;"	i
Drop for PlainRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a, W> Drop for PlainRecordDecorator<'a, W>$/;"	i
Drop for PlainSyncRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> Drop for PlainSyncRecordDecorator<W>$/;"	i
Drop for PushFnValueSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a> Drop for PushFnValueSerializer<'a> {$/;"	i
Drop for Serializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> Drop for Serializer<'a> {$/;"	i
Drop for TermRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> Drop for TermRecordDecorator<'a> {$/;"	i
Duplicate	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D1: Drain, D2: Drain> Duplicate<D1, D2> {$/;"	i
Duplicate	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct Duplicate<D1: Drain, D2: Drain>(pub D1, pub D2);$/;"	s
Err	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    type Err = AsyncError;$/;"	T
Err	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    type Err = io::Error;$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err = ($/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err = ();$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err = D::Err;$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err = E;$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err = MutexDrainError<D>;$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err = Never;$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Err;$/;"	T
Err	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^            type Err = Never;$/;"	T
Error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub enum Error {$/;"	g
Filter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain, F> Filter<D, F>$/;"	i
Filter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct Filter<D: Drain, F>(pub D, pub F)$/;"	s
FilterFn	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait FilterFn$/;"	t
FilterFn	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait FilterFn: 'static + Sync + Send + Fn(&Record) -> bool {}$/;"	t
FilterFn for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> FilterFn for T$/;"	i
FilterLevel	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl FilterLevel {$/;"	i
FilterLevel	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub enum FilterLevel {$/;"	g
FnValue	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct FnValue<V: Value, F>(pub F)$/;"	s
Foo	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    impl Foo {$/;"	i
Foo	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    struct Foo;$/;"	s
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl<T> From<mpsc::TrySendError<T>> for AsyncError {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl<T> From<std::sync::PoisonError<T>> for AsyncError {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl<T> From<std::sync::TryLockError<T>> for AsyncError {$/;"	i
From	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a, D: Drain> From<std::sync::PoisonError<std::sync::MutexGuard<'a, D>>>$/;"	i
From for Error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl From<core::fmt::Error> for Error {$/;"	i
From for Error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl From<std::io::Error> for Error {$/;"	i
From for std	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl From<Error> for std::io::Error {$/;"	i
FromStr for FilterLevel	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl FromStr for FilterLevel {$/;"	i
FromStr for Level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl FromStr for Level {$/;"	i
FullFormat	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<D> FullFormat<D>$/;"	i
FullFormat	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct FullFormat<D>$/;"	s
FullFormatBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<D> FullFormatBuilder<D>$/;"	i
FullFormatBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct FullFormatBuilder<D>$/;"	s
Fuse	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> Fuse<D>$/;"	i
Fuse	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct Fuse<D: Drain>(pub D)$/;"	s
IgnoreResult	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> IgnoreResult<D> {$/;"	i
IgnoreResult	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct IgnoreResult<D: Drain> {$/;"	s
K	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^        struct K;$/;"	s
KV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl KV for () {$/;"	i
KV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a, T> KV for &'a T$/;"	i
KV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T: KV, R: KV> KV for (T, R) {$/;"	i
KV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait KV {$/;"	t
KV for Arc	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> KV for Arc<T>$/;"	i
KV for BorrowedKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a> KV for BorrowedKV<'a> {$/;"	i
KV for Box	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> KV for Box<T>$/;"	i
KV for K	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^        impl KV for K {$/;"	i
KV for MultiListNode	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl KV for MultiListNode {$/;"	i
KV for OwnedKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> KV for OwnedKV<T>$/;"	i
KV for OwnedKVList	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl KV for OwnedKVList {$/;"	i
KV for OwnedKVListNode	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> KV for OwnedKVListNode<T>$/;"	i
KV for SingleKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<V> KV for SingleKV<V>$/;"	i
Key	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type Key = &'static str;$/;"	T
LOC	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^        static LOC : $crate::RecordLocation = $crate::RecordLocation {$/;"	c
LOG_LEVEL_NAMES	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub static LOG_LEVEL_NAMES: [&'static str; 7] =$/;"	c
LOG_LEVEL_SHORT_NAMES	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub static LOG_LEVEL_SHORT_NAMES: [&'static str; 7] =$/;"	c
Level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl Level {$/;"	i
Level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub enum Level {$/;"	g
LevelFilter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> LevelFilter<D> {$/;"	i
LevelFilter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct LevelFilter<D: Drain>(pub D, pub Level);$/;"	s
Logger	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D> Logger<D>$/;"	i
Logger	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct Logger<D = Arc<SendSyncRefUnwindSafeDrain<Ok = (), Err = Never>>>$/;"	s
MapErrFn	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait MapErrFn<EI, EO>$/;"	t
MapErrFn	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait MapErrFn<EI, EO>: 'static + Sync + Send + Fn(EI) -> EO {}$/;"	t
MapErrFn for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T, EI, EO> MapErrFn<EI, EO> for T$/;"	i
MapError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain, E> MapError<D, E> {$/;"	i
MapError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct MapError<D: Drain, E> {$/;"	s
MultiListNode	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^struct MultiListNode {$/;"	s
MutexDrainError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub enum MutexDrainError<D: Drain> {$/;"	g
Never	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type Never = private::NeverStruct;$/;"	T
NeverStruct	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub struct NeverStruct(());$/;"	s
Ok	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    type Ok = ();$/;"	T
Ok	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    type Ok = ();$/;"	T
Ok	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Ok = ();$/;"	T
Ok	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Ok = (D1::Ok, D2::Ok);$/;"	T
Ok	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Ok = D::Ok;$/;"	T
Ok	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Ok = Option<D::Ok>;$/;"	T
Ok	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    type Ok;$/;"	T
Ok	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^            type Ok = ();$/;"	T
OwnedKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct OwnedKV<T>($/;"	s
OwnedKVList	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl OwnedKVList {$/;"	i
OwnedKVList	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct OwnedKVList {$/;"	s
OwnedKVListNode	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^struct OwnedKVListNode<T>$/;"	s
OwnedKeyValueList	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type OwnedKeyValueList = OwnedKVList;$/;"	T
PlainDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> PlainDecorator<W>$/;"	i
PlainDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct PlainDecorator<W>(RefCell<W>)$/;"	s
PlainRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct PlainRecordDecorator<'a, W: 'a>(&'a RefCell<W>)$/;"	s
PlainSyncDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> PlainSyncDecorator<W>$/;"	i
PlainSyncDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct PlainSyncDecorator<W>(sync::Arc<sync::Mutex<W>>)$/;"	s
PlainSyncRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct PlainSyncRecordDecorator<W>$/;"	s
PushFnSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type PushFnSerializer<'a> = PushFnValueSerializer<'a>;$/;"	T
PushFnValue	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct PushFnValue<F>(pub F)$/;"	s
PushFnValueSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a> PushFnValueSerializer<'a> {$/;"	i
PushFnValueSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct PushFnValueSerializer<'a> {$/;"	s
PushLazy	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type PushLazy<T> = PushFnValue<T>;$/;"	T
RS	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^        static RS : $crate::RecordStatic<'static> = record_static!($lvl, $tag);$/;"	c
RS	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^        static RS : $crate::RecordStatic<'static> = slog_record_static!($lvl,$/;"	c
Record	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a> Record<'a> {$/;"	i
Record	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct Record<'a> {$/;"	s
RecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub trait RecordDecorator: io::Write {$/;"	t
RecordDecorator for Box	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl RecordDecorator for Box<RecordDecorator> {$/;"	i
RecordDecorator for PlainRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a, W> RecordDecorator for PlainRecordDecorator<'a, W>$/;"	i
RecordDecorator for PlainSyncRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> RecordDecorator for PlainSyncRecordDecorator<W>$/;"	i
RecordDecorator for TermRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> RecordDecorator for TermRecordDecorator<'a> {$/;"	i
RecordLocation	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct RecordLocation {$/;"	s
RecordStatic	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct RecordStatic<'a> {$/;"	s
Result	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type Result<T = ()> = result::Result<T, Error>;$/;"	T
STATIC_TERMINATOR_UNIT	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub static STATIC_TERMINATOR_UNIT: () = ();$/;"	c
SendRefUnwindSafeDrain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendRefUnwindSafeDrain: Drain + Send + RefUnwindSafe {}$/;"	t
SendRefUnwindSafeDrain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendRefUnwindSafeDrain: Drain + Send {}$/;"	t
SendRefUnwindSafeDrain for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> SendRefUnwindSafeDrain for T$/;"	i
SendSyncRefUnwindSafeDrain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncRefUnwindSafeDrain: Drain + Send + Sync + RefUnwindSafe {}$/;"	t
SendSyncRefUnwindSafeDrain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncRefUnwindSafeDrain: Drain + Send + Sync {}$/;"	t
SendSyncRefUnwindSafeDrain for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> SendSyncRefUnwindSafeDrain for T$/;"	i
SendSyncRefUnwindSafeKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncRefUnwindSafeKV: KV + Send + Sync + RefUnwindSafe {}$/;"	t
SendSyncRefUnwindSafeKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncRefUnwindSafeKV: KV + Send + Sync {}$/;"	t
SendSyncRefUnwindSafeKV for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> SendSyncRefUnwindSafeKV for T$/;"	i
SendSyncUnwindSafe	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncUnwindSafe: Send + Sync + UnwindSafe {}$/;"	t
SendSyncUnwindSafe for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> SendSyncUnwindSafe for T$/;"	i
SendSyncUnwindSafeDrain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncUnwindSafeDrain: Drain + Send + Sync + UnwindSafe {}$/;"	t
SendSyncUnwindSafeDrain	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait SendSyncUnwindSafeDrain: Drain + Send + Sync {}$/;"	t
SendSyncUnwindSafeDrain for T	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> SendSyncUnwindSafeDrain for T$/;"	i
Serialize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type Serialize = Value;$/;"	T
Serializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> Serializer<'a> {$/;"	i
Serializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^struct Serializer<'a> {$/;"	s
Serializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait Serializer {$/;"	t
Serializer for AsFmtSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<F> Serializer for AsFmtSerializer<F>$/;"	i
Serializer for ToSendSerializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl Serializer for ToSendSerializer {$/;"	i
SingleKV	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub struct SingleKV<V>(pub Key, pub V)$/;"	s
TIMESTAMP_FORMAT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^const TIMESTAMP_FORMAT: &'static str = "%b %d %H:%M:%S%.3f";$/;"	c
TermDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl TermDecorator {$/;"	i
TermDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct TermDecorator {$/;"	s
TermDecoratorBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl TermDecoratorBuilder {$/;"	i
TermDecoratorBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct TermDecoratorBuilder {$/;"	s
TermRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct TermRecordDecorator<'a> {$/;"	s
TestStdoutWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub struct TestStdoutWriter;$/;"	s
ThreadSafeTimestampFn	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub trait ThreadSafeTimestampFn$/;"	t
ThreadSafeTimestampFn for F	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<F> ThreadSafeTimestampFn for F$/;"	i
ToSendSerializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^impl ToSendSerializer {$/;"	i
ToSendSerializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^struct ToSendSerializer {$/;"	s
Value	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^        impl Value for $t {$/;"	i
Value	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl Value for () {$/;"	i
Value	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a, V> Value for &'a V$/;"	i
Value	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub trait Value {$/;"	t
Value for Arc	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> Value for Arc<T>$/;"	i
Value for Box	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> Value for Box<T>$/;"	i
Value for FnValue	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a, V: 'a + Value, F> Value for FnValue<V, F>$/;"	i
Value for Option	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T: Value> Value for Option<T> {$/;"	i
Value for PushFnValue	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<F> Value for PushFnValue<F>$/;"	i
Value for Rc	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> Value for Rc<T>$/;"	i
Value for String	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl Value for String {$/;"	i
Value for core	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> Value for core::num::Wrapping<T>$/;"	i
Value for fmt	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a> Value for fmt::Arguments<'a> {$/;"	i
Value for std	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<'a> Value for std::path::Display<'a>$/;"	i
Value for str	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl Value for str {$/;"	i
ValueSerializer	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub type ValueSerializer<'a> = PushFnValueSerializer<'a>;$/;"	T
X	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    struct X {$/;"	s
__slog_static_max_level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub fn __slog_static_max_level() -> FilterLevel {$/;"	f
as_short_str	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn as_short_str(&self) -> &'static str {$/;"	f
as_str	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn as_str(&self) -> &'static str {$/;"	f
as_usize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn as_usize(&self) -> usize {$/;"	f
b	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! b($/;"	d
bar	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^        fn bar(&self) -> u32 {$/;"	f
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn build(self) -> Async {$/;"	f
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn build(self) -> AsyncCore {$/;"	f
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn build(self) -> CompactFormat<D> {$/;"	f
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn build(self) -> FullFormat<D> {$/;"	f
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn build(self) -> TermDecorator {$/;"	f
build_no_guard	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn build_no_guard(self) -> Async {$/;"	f
build_no_guard	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn build_no_guard(self) -> AsyncCore {$/;"	f
build_with_guard	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn build_with_guard(self) -> (Async, AsyncGuard) {$/;"	f
build_with_guard	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn build_with_guard(self) -> (AsyncCore, AsyncGuard) {$/;"	f
cause	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn cause(&self) -> Option<&std::error::Error> {$/;"	f
chan_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn chan_size(mut self, s: usize) -> Self {$/;"	f
chan_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn chan_size(self, s: usize) -> Self {$/;"	f
column	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn column(&self) -> u32 {$/;"	f
convert	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<T> convert::From<OwnedKV<T>> for OwnedKVList$/;"	i
core::fmt::Display for Error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl core::fmt::Display for Error {$/;"	i
count	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn count(&self) -> usize {$/;"	f
crit	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! crit($/;"	d
cs	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^macro_rules! cs($/;"	d
custom	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn custom<$/;"	f
debug	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! debug($/;"	d
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn default<$/;"	f
description	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn drop(&mut self) {$/;"	f
emit	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn emit<'b, S: 'b + Value>(mut self, s: S) -> Result {$/;"	f
emit_arguments	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_arguments($/;"	f
emit_arguments	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_arguments($/;"	f
emit_arguments	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn emit_arguments(&mut self, key: Key, val: &fmt::Arguments) -> Result {$/;"	f
emit_arguments	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn emit_arguments(&mut self, key: Key, val: &fmt::Arguments) -> Result;$/;"	f
emit_bool	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_bool(&mut self, key: Key, val: bool) -> slog::Result {$/;"	f
emit_bool	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_bool(&mut self, key: &str, val: bool) -> slog::Result {$/;"	f
emit_char	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_char(&mut self, key: Key, val: char) -> slog::Result {$/;"	f
emit_char	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_char(&mut self, key: &str, val: char) -> slog::Result {$/;"	f
emit_f32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_f32(&mut self, key: Key, val: f32) -> slog::Result {$/;"	f
emit_f32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_f32(&mut self, key: &str, val: f32) -> slog::Result {$/;"	f
emit_f64	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_f64(&mut self, key: Key, val: f64) -> slog::Result {$/;"	f
emit_f64	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_f64(&mut self, key: &str, val: f64) -> slog::Result {$/;"	f
emit_i16	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_i16(&mut self, key: Key, val: i16) -> slog::Result {$/;"	f
emit_i16	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_i16(&mut self, key: &str, val: i16) -> slog::Result {$/;"	f
emit_i32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_i32(&mut self, key: Key, val: i32) -> slog::Result {$/;"	f
emit_i32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_i32(&mut self, key: &str, val: i32) -> slog::Result {$/;"	f
emit_i64	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_i64(&mut self, key: Key, val: i64) -> slog::Result {$/;"	f
emit_i64	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_i64(&mut self, key: &str, val: i64) -> slog::Result {$/;"	f
emit_i8	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_i8(&mut self, key: Key, val: i8) -> slog::Result {$/;"	f
emit_i8	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_i8(&mut self, key: &str, val: i8) -> slog::Result {$/;"	f
emit_isize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_isize(&mut self, key: Key, val: isize) -> slog::Result {$/;"	f
emit_isize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_isize(&mut self, key: &str, val: isize) -> slog::Result {$/;"	f
emit_none	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_none(&mut self, key: Key) -> slog::Result {$/;"	f
emit_none	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_none(&mut self, key: &str) -> slog::Result {$/;"	f
emit_none	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn emit_none(&mut self, key: Key) -> Result {$/;"	f
emit_str	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_str(&mut self, key: Key, val: &str) -> slog::Result {$/;"	f
emit_str	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_str(&mut self, key: &str, val: &str) -> slog::Result {$/;"	f
emit_u16	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_u16(&mut self, key: Key, val: u16) -> slog::Result {$/;"	f
emit_u16	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_u16(&mut self, key: &str, val: u16) -> slog::Result {$/;"	f
emit_u32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_u32(&mut self, key: Key, val: u32) -> slog::Result {$/;"	f
emit_u32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_u32(&mut self, key: &str, val: u32) -> slog::Result {$/;"	f
emit_u64	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_u64(&mut self, key: Key, val: u64) -> slog::Result {$/;"	f
emit_u64	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_u64(&mut self, key: &str, val: u64) -> slog::Result {$/;"	f
emit_u8	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_u8(&mut self, key: Key, val: u8) -> slog::Result {$/;"	f
emit_u8	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_u8(&mut self, key: &str, val: u8) -> slog::Result {$/;"	f
emit_unit	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_unit(&mut self, key: Key) -> slog::Result {$/;"	f
emit_unit	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_unit(&mut self, key: &str) -> slog::Result {$/;"	f
emit_unit	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn emit_unit(&mut self, key: Key) -> Result {$/;"	f
emit_usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn emit_usize(&mut self, key: Key, val: usize) -> slog::Result {$/;"	f
emit_usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn emit_usize(&mut self, key: &str, val: usize) -> slog::Result {$/;"	f
error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! error($/;"	d
expressions	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^fn expressions() {$/;"	f
expressions_fmt	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^fn expressions_fmt() {$/;"	f
file	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn file(&self) -> &'static str {$/;"	f
filter	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn filter<F>(self, f: F) -> Filter<Self, F>$/;"	f
filter_level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn filter_level(self, level: Level) -> LevelFilter<Self>$/;"	f
filterlevel_sanity	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^fn filterlevel_sanity() {$/;"	f
finish	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn finish(self) -> Box<KV + Send> {$/;"	f
finish	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn finish(&mut self) -> io::Result<usize> {$/;"	f
finish	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn finish(mut self) -> io::Result<()> {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fmt	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> result::Result<(), fmt::Error> {$/;"	f
fmt	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn fmt(&self, fmt: &mut core::fmt::Formatter) -> std::fmt::Result {$/;"	f
fmt::Debug for Logger	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D> fmt::Debug for Logger<D>$/;"	i
fmt::Debug for MutexDrainError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D> fmt::Debug for MutexDrainError<D>$/;"	i
fmt::Debug for OwnedKVList	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl fmt::Debug for OwnedKVList {$/;"	i
fmt::Display for Level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl fmt::Display for Level {$/;"	i
fmt::Display for MutexDrainError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D: Drain> fmt::Display for MutexDrainError<D>$/;"	i
force_color	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn force_color(mut self) -> Self {$/;"	f
force_plain	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn force_plain(mut self) -> Self {$/;"	f
format_compact	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn format_compact($/;"	f
format_full	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn format_full($/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn from(_: mpsc::TrySendError<T>) -> AsyncError {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn from(_: std::sync::TryLockError<T>) -> AsyncError {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn from(err: std::sync::PoisonError<T>) -> AsyncError {$/;"	f
from	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from($/;"	f
from	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from(_: core::fmt::Error) -> Error {$/;"	f
from	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from(e: Error) -> std::io::Error {$/;"	f
from	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from(err: std::io::Error) -> Error {$/;"	f
from	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from(from: OwnedKV<T>) -> Self {$/;"	f
from_str	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from_str(level: &str) -> core::result::Result<FilterLevel, ()> {$/;"	f
from_str	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn from_str(level: &str) -> core::result::Result<Level, ()> {$/;"	f
from_usize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn from_usize(u: usize) -> Option<FilterLevel> {$/;"	f
from_usize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn from_usize(u: usize) -> Option<Level> {$/;"	f
function	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn function(&self) -> &'static str {$/;"	f
fuse	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
get_sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn get_sender($/;"	f
ignore_res	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn ignore_res(self) -> IgnoreResult<Self>$/;"	f
impl_default_as_fmt	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! impl_default_as_fmt{$/;"	d
impl_value_for	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! impl_value_for{$/;"	d
info	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! info($/;"	d
into_erased	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn into_erased($/;"	f
io::Write for CountingWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> io::Write for CountingWriter<'a> {$/;"	i
io::Write for PlainRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a, W> io::Write for PlainRecordDecorator<'a, W>$/;"	i
io::Write for PlainSyncRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<W> io::Write for PlainSyncRecordDecorator<W>$/;"	i
io::Write for TermRecordDecorator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> io::Write for TermRecordDecorator<'a> {$/;"	i
io::Write for TestStdoutWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl io::Write for TestStdoutWriter {$/;"	i
is_at_least	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn is_at_least(&self, level: Self) -> bool {$/;"	f
kv	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn kv(&self) -> BorrowedKV {$/;"	f
kv	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! kv($/;"	d
level	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	f
level_at_least	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^fn level_at_least() {$/;"	f
level_from_str	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^fn level_from_str() {$/;"	f
level_to_color	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn level_to_color(level: slog::Level) -> u16 {$/;"	f
line	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn line(&self) -> u32 {$/;"	f
list	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn list(&self) -> &OwnedKVList {$/;"	f
location	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn location(&self) -> &RecordLocation {$/;"	f
log	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn log($/;"	f
log	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn log($/;"	f
log	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn log($/;"	f
log	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn log(&self, _: &Record, _: &OwnedKVList) -> result::Result<(), Never> {$/;"	f
log	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn log(&self, record: &Record) {$/;"	f
log	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! log($/;"	d
log	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^            fn log($/;"	f
logger_fmt_debug_sanity	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    fn logger_fmt_debug_sanity() {$/;"	f
logger_to_erased	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^fn logger_to_erased() {$/;"	f
makers	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^fn makers() {$/;"	f
map	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn map<F, R>(self, f: F) -> R$/;"	f
map_err	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn map_err<F, E>(self, f: F) -> MapError<Self, E>$/;"	f
max	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn max() -> Self {$/;"	f
maybe_print_comma	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn maybe_print_comma(&mut self) -> io::Result<()> {$/;"	f
min	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn min() -> Self {$/;"	f
module	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn module(&self) -> &'static str {$/;"	f
msg	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn msg(&self) -> &fmt::Arguments {$/;"	f
multichain	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    fn multichain() {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn new() -> Self {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn new(drain: D) -> AsyncBuilder<D> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn new(drain: D) -> Self {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn new<D: slog::Drain<Err = slog::Never, Ok = ()> + Send + 'static>($/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    pub fn new<D>(drain: D) -> Self$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn new($/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn new() -> Self {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn new(wrapped: &'a mut io::Write) -> CountingWriter {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn new() -> TermDecoratorBuilder {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn new(d: D) -> CompactFormatBuilder<D> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn new(d: D) -> FullFormatBuilder<D> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn new(io: W) -> Self {$/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn new<T>($/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new($/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new(drain1: D1, drain2: D2) -> Self {$/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new(drain: D) -> Self {$/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new(drain: D, cond: F) -> Self {$/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new(drain: D, level: Level) -> Self {$/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new<F>(drain: D, map_fn: F) -> Self$/;"	f
new	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn new<T>(&self, values: OwnedKV<T>) -> Logger<D>$/;"	f
no_imports	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^mod no_imports {$/;"	m
o	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! o($/;"	d
print_msg_header	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^fn print_msg_header($/;"	f
private	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^mod private {$/;"	m
push_dropped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn push_dropped(&self, logger_values: &OwnedKVList) -> AsyncResult<()> {$/;"	f
record	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! record($/;"	d
record_static	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! record_static($/;"	d
reset	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	f
reset	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()>;$/;"	f
root	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn root<T>(values: OwnedKV<T>) -> Self$/;"	f
root	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn root<T>(drain: D, values: OwnedKV<T>) -> Logger$/;"	f
root_typed	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn root_typed<T>(drain: D, values: OwnedKV<T>) -> Logger<D>$/;"	f
s	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^macro_rules! s($/;"	d
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn send(&self, r: AsyncRecord) -> AsyncResult<()> {$/;"	f
ser	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^pub mod ser {$/;"	m
serialize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^            fn serialize(&self,$/;"	f
serialize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn serialize($/;"	f
serialize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn serialize(&self, record: &Record, serializer: &mut Serializer)$/;"	f
serialize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    fn serialize(&self,$/;"	f
serialize	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn serialize<'b, S: 'b + Value>(self, s: S) -> Result {$/;"	f
serialize	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^            fn serialize($/;"	f
should_use_color	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn should_use_color(&self) -> bool {$/;"	f
simple_logger_erased	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^fn simple_logger_erased() {$/;"	f
slog::ser::Serializer for CompactFormatSerializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> slog::ser::Serializer for CompactFormatSerializer<'a> {$/;"	i
slog::ser::Serializer for Serializer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^impl<'a> slog::ser::Serializer for Serializer<'a> {$/;"	i
slog_b	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_b($/;"	d
slog_crit	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_crit($/;"	d
slog_debug	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_debug($/;"	d
slog_error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_error($/;"	d
slog_info	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_info($/;"	d
slog_kv	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_kv($/;"	d
slog_log	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_log($/;"	d
slog_o	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_o($/;"	d
slog_record	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_record($/;"	d
slog_record_static	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_record_static($/;"	d
slog_trace	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_trace($/;"	d
slog_warn	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! slog_warn($/;"	d
spawn_thread	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.1.0/lib.rs	/^    fn spawn_thread($/;"	f
start_comma	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_comma(&mut self) -> io::Result<()> {$/;"	f
start_key	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_key(&mut self) -> io::Result<()> {$/;"	f
start_level	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_level(&mut self) -> io::Result<()> {$/;"	f
start_msg	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_msg(&mut self) -> io::Result<()> {$/;"	f
start_separator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_separator(&mut self) -> io::Result<()> {$/;"	f
start_timestamp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_timestamp(&mut self) -> io::Result<()> {$/;"	f
start_value	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_value(&mut self) -> io::Result<()> {$/;"	f
start_whitespace	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn start_whitespace(&mut self) -> io::Result<()> {$/;"	f
std::error::Error for Error	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl std::error::Error for Error {$/;"	i
std::error::Error for MutexDrainError	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^impl<D> std::error::Error for MutexDrainError<D>$/;"	i
std_only	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^mod std_only {$/;"	m
stderr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn stderr(mut self) -> Self {$/;"	f
stdout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn stdout(mut self) -> Self {$/;"	f
tag	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn tag(&self) -> &str {$/;"	f
takes_arced_drain	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    fn takes_arced_drain(_l: Logger) {}$/;"	f
term_compact	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub fn term_compact() -> CompactFormat<TermDecorator> {$/;"	f
term_error_to_io_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^fn term_error_to_io_error(e: term::Error) -> io::Error {$/;"	f
term_full	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub fn term_full() -> FullFormat<TermDecorator> {$/;"	f
test_o_macro_expansion	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    fn test_o_macro_expansion() {$/;"	f
test_slog_o_macro_expansion	/home/dpc/lab/rust/slog/slog-rs/src/tests.rs	/^    fn test_slog_o_macro_expansion() {$/;"	f
tests	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^mod tests;$/;"	m
timestamp_local	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub fn timestamp_local(io: &mut io::Write) -> io::Result<()> {$/;"	f
timestamp_utc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^pub fn timestamp_utc(io: &mut io::Write) -> io::Result<()> {$/;"	f
to_erased	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^    pub fn to_erased($/;"	f
trace	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! trace($/;"	d
try_build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn try_build(self) -> Option<TermDecorator> {$/;"	f
use_custom_timestamp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn use_custom_timestamp<F>(mut self, f: F) -> Self$/;"	f
use_local_timestamp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn use_local_timestamp(mut self) -> Self {$/;"	f
use_original_order	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn use_original_order(mut self) -> Self {$/;"	f
use_utc_timestamp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    pub fn use_utc_timestamp(mut self) -> Self {$/;"	f
warn	/home/dpc/lab/rust/slog/slog-rs/src/lib.rs	/^macro_rules! warn($/;"	d
with_record	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn with_record<F>($/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn write(&mut self, data: &[u8]) -> io::Result<usize> {$/;"	f
write_all	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.2.0/src/lib.rs	/^    fn write_all(&mut self, buf: &[u8]) -> io::Result<()> {$/;"	f
