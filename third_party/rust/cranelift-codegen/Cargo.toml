[package]
authors = ["The Cranelift Project Developers"]
name = "cranelift-codegen"
version = "0.56.0"
description = "Low-level code generator library"
license = "Apache-2.0 WITH LLVM-exception"
documentation = "https://cranelift.readthedocs.io/"
repository = "https://github.com/bytecodealliance/cranelift"
categories = ["no-std"]
readme = "README.md"
keywords = ["compile", "compiler", "jit"]
build = "build.rs"
edition = "2018"

[dependencies]
cranelift-codegen-shared = { path = "./shared", version = "0.56.0" }
cranelift-entity = { path = "../cranelift-entity", version = "0.56.0" }
cranelift-bforest = { path = "../cranelift-bforest", version = "0.56.0" }
hashbrown = { version = "0.6", optional = true }
target-lexicon = "0.10"
log = { version = "0.4.6", default-features = false }
serde = { version = "1.0.94", features = ["derive"], optional = true }
gimli = { version = "0.20.0", default-features = false, features = ["write"], optional = true }
smallvec = { version = "1.0.0" }
thiserror = "1.0.4"
byteorder = { version = "1.3.2", default-features = false }
# It is a goal of the cranelift-codegen crate to have minimal external dependencies.
# Please don't add any unless they are essential to the task of creating binary
# machine code. Integration tests that need external dependencies can be
# accomodated in `tests`.

[build-dependencies]
cranelift-codegen-meta = { path = "meta", version = "0.56.0" }

[features]
default = ["std", "basic-blocks", "unwind"]

# The "std" feature enables use of libstd. The "core" feature enables use
# of some minimal std-like replacement libraries. At least one of these two
# features need to be enabled.
std = []

# The "core" features enables use of "hashbrown" since core doesn't have
# a HashMap implementation, and a workaround for Cargo #4866.
core = ["hashbrown"]

# This enables some additional functions useful for writing tests, but which
# can significantly increase the size of the library.
testing_hooks = []

# This enables unwind info generation functionality.
unwind = ["gimli"]

# ISA targets for which we should build.
# If no ISA targets are explicitly enabled, the ISA target for the host machine is enabled.
x86 = []
arm32 = []
arm64 = []
riscv = []

# Option to enable all architectures.
all-arch = [
    "x86",
    "arm32",
    "arm64",
    "riscv"
]

# For dependent crates that want to serialize some parts of cranelift
enable-serde = ["serde"]

# Temporary feature that enforces basic block semantics.
basic-blocks = []

[badges]
maintenance = { status = "experimental" }
travis-ci = { repository = "bytecodealliance/cranelift" }
