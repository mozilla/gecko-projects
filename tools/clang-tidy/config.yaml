---
target: obj-x86_64-pc-linux-gnu
# It is used by 'mach static-analysis' and 'mozreview static-analysis bot'
# in order to have consistency across the used checkers.
# All the clang checks used by the static-analysis tools.
platforms:
  - macosx64
  - linux64
  - win64
  - win32
clang_checkers:
  - name: -*
    publish: !!bool no
  - name: bugprone-argument-comment
  - name: bugprone-assert-side-effect
  - name: bugprone-bool-pointer-implicit-conversion
  - name: bugprone-forward-declaration-namespace
  - name: bugprone-macro-repeated-side-effects
  - name: bugprone-string-constructor
  - name: bugprone-string-integer-assignment
  - name: bugprone-suspicious-memset-usage
  - name: bugprone-suspicious-missing-comma
  - name: bugprone-suspicious-semicolon
  - name: bugprone-swapped-arguments
  - name: bugprone-unused-raii
  - name: clang-analyzer-cplusplus.NewDelete
  - name: clang-analyzer-cplusplus.NewDeleteLeaks
  - name: clang-analyzer-deadcode.DeadStores
  - name: clang-analyzer-security.FloatLoopCounter
  - name: clang-analyzer-security.insecureAPI.getpw
  # We don't add clang-analyzer-security.insecureAPI.gets here; it's deprecated.
  - name: clang-analyzer-security.insecureAPI.mkstemp
  - name: clang-analyzer-security.insecureAPI.mktemp
  - name: clang-analyzer-security.insecureAPI.rand
    publish: !!bool no
  - name: clang-analyzer-security.insecureAPI.strcpy
    publish: !!bool no
  - name: clang-analyzer-security.insecureAPI.UncheckedReturn
  - name: clang-analyzer-security.insecureAPI.vfork
  - name: clang-analyzer-unix.Malloc
  - name: clang-analyzer-unix.cstring.BadSizeArg
  - name: clang-analyzer-unix.cstring.NullArg
  - name: misc-unused-alias-decls
  - name: misc-unused-using-decls
  - name: modernize-avoid-bind
    restricted-platforms:
      - win32
      - win64
  - name: modernize-loop-convert
  - name: modernize-raw-string-literal
  - name: modernize-redundant-void-arg
    publish: !!bool no
  - name: modernize-shrink-to-fit
  - name: modernize-use-auto
    # Controversial, see bug 1371052.
    publish: !!bool no
  - name: modernize-use-bool-literals
  - name: modernize-use-equals-default
  - name: modernize-use-equals-delete
  - name: modernize-use-nullptr
  - name: modernize-use-override
    # Too noisy because of the way how we implement NS_IMETHOD. See Bug 1420366.
    publish: !!bool no
  - name: mozilla-*
  - name: performance-faster-string-find
  - name: performance-for-range-copy
  # Only available from clang tidy 6.0. We are currently using 5.0
  # - name: performance-implicit-conversion-in-loop
  - name: performance-inefficient-string-concatenation
  - name: performance-inefficient-vector-operation
  - name: performance-type-promotion-in-math-fn
  - name: performance-unnecessary-copy-initialization
  - name: performance-unnecessary-value-param
  - name: readability-container-size-empty
  - name: readability-else-after-return
  - name: readability-misleading-indentation
  - name: readability-redundant-control-flow
  - name: readability-redundant-smartptr-get
    publish: !!bool no
  - name: readability-redundant-string-cstr
  - name: readability-redundant-string-init
  - name: readability-uniqueptr-delete-release
# Only available from clang tidy 6.0. We are currently using 5.0
# - name: readability-static-accessed-through-instance

# Third party files from mozilla-central
third_party: tools/rewriting/ThirdPartyPaths.txt
